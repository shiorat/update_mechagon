# add_local_concern                         - TYPE, LEVEL
# add_or_upgrade_local_concern              - TYPE
# upgrade_local_concern                     - TYPE
# downgrade_local_concern                   - TYPE
# remove_local_concern                      - TYPE

# spawn_rebels_by_local_concern             - TYPE
# spawn_big_rebels_by_local_concern         - TYPE
# adjust_income_by_local_concern            - TYPE
# adjust_ADM_power_by_local_concern         - TYPE
# adjust_DIP_power_by_local_concern         - TYPE
# adjust_MIL_power_by_local_concern         - TYPE
# adjust_stability_by_local_concern         - TYPE

#--------------------------------------
# LC Utility
#--------------------------------------
add_local_concern = {
    add_permanent_province_modifier = { 
        name = lc_level_$TYPE$_$LEVEL$
        duration = -1
    }
}

add_or_upgrade_local_concern = {
    # Level 1 -> 2
    if = {
        limit = { 
            has_province_modifier = lc_level_$TYPE$_1
        }
        
        remove_province_modifier = lc_level_$TYPE$_1
        add_permanent_province_modifier  = {
            name = lc_level_$TYPE$_2
            duration = -1  
        }
    }
    # Level 2 -> 3
    else_if = {
        limit = { 
            has_province_modifier = lc_level_$TYPE$_2
        }
        
        remove_province_modifier = lc_level_$TYPE$_2
        add_permanent_province_modifier  = {
            name = lc_level_$TYPE$_3
            duration = -1  
        }
    }
    # Level 3 -> No Change
    else_if = {
        limit = { 
            has_province_modifier = lc_level_$TYPE$_3
        }
        
        # Do nothing
    }
    # None -> Level 1
    else = {
        add_permanent_province_modifier = { 
            name = lc_level_$TYPE$_1
            duration = -1
        }
    }
}

# Used by events that hold the old province in the ROOT scope
upgrade_local_concern = {
    if = {
        limit = {
            PREV = { has_province_modifier = lc_level_$TYPE$_1 }
        }
        add_permanent_province_modifier = { 
            name = lc_level_$TYPE$_1
            duration = -1
        }
    }
    else_if = {
        limit = {
            PREV = { has_province_modifier = lc_level_$TYPE$_2 }
        }
        add_permanent_province_modifier = { 
            name = lc_level_$TYPE$_2
            duration = -1
        }
    }
    else_if = {
        limit = {
            PREV = { has_province_modifier = lc_level_$TYPE$_3 }
        }
        add_permanent_province_modifier = { 
            name = lc_level_$TYPE$_3
            duration = -1
        }
    }
}

# Used by events that hold the old province in the FROM scope
upgrade_local_concern_FROM = {
    if = {
        limit = {
            FROM = { has_province_modifier = lc_level_$TYPE$_1 }
        }
        add_permanent_province_modifier = { 
            name = lc_level_$TYPE$_1
            duration = -1
        }
    }
    else_if = {
        limit = {
            FROM = { has_province_modifier = lc_level_$TYPE$_2 }
        }
        add_permanent_province_modifier = { 
            name = lc_level_$TYPE$_2
            duration = -1
        }
    }
    else_if = {
        limit = {
            FROM = { has_province_modifier = lc_level_$TYPE$_3 }
        }
        add_permanent_province_modifier = { 
            name = lc_level_$TYPE$_3
            duration = -1
        }
    }
}

downgrade_local_concern = {
    if = {
        limit = { 
            has_province_modifier = lc_level_$TYPE$_3 
        }
        
        remove_province_modifier = lc_level_$TYPE$_3
        add_permanent_province_modifier  = {
            name = lc_level_$TYPE$_2
            duration = -1  
        }
    }
    else_if = {
        limit = { 
            has_province_modifier = lc_level_$TYPE$_2
        }
        
        remove_province_modifier = lc_level_$TYPE$_2
        add_permanent_province_modifier  = {
            name = lc_level_$TYPE$_1
            duration = -1  
        }
    }
    else_if = {
        limit = { 
            has_province_modifier = lc_level_$TYPE$_1
        }
        
        remove_province_modifier = lc_level_$TYPE$_1
    }
}

remove_local_concern = {
    remove_province_modifier = lc_level_$TYPE$_1
    remove_province_modifier = lc_level_$TYPE$_2
    remove_province_modifier = lc_level_$TYPE$_3
}

# Used by the Province Menu to fire the Downgrade Tier - Adventurer events for each type
trigger_local_concern_events = {
    if = {
        limit = {
            has_any_local_concern = {
                TYPE = bandit
            }
        }
        province_event = { id = wwu_lc_bandits.23 }
    }
    if = {
        limit = {
            has_any_local_concern = {
                TYPE = orc
            }
        }
        province_event = { id = wwu_lc_orcs.23 }
    }
    if = {
        limit = {
            has_any_local_concern = {
                TYPE = murloc
            }
        }
        province_event = { id = wwu_lc_murlocs.23 }
    }
    if = {
        limit = {
            has_any_local_concern = {
                TYPE = gnoll
            }
        }
        province_event = { id = wwu_lc_gnolls.23 }
    }
}

#--------------------------------------
# Effect Utility
#--------------------------------------
spawn_rebels_by_local_concern = {
    if = {
        limit = {
            has_local_concern_level_1 = {
                TYPE = $TYPE$
            }
        }
        spawn_rebels = {
            type = lc_$TYPE$_rebels
            size = 1
        }
    }
    else_if = {
        limit = {
            has_local_concern_level_2 = {
                TYPE = $TYPE$
            }
        }
        spawn_rebels = {
            type = lc_$TYPE$_rebels
            size = 2
        }
    }
    else_if = {
        limit = {
            has_local_concern_level_3 = {
                TYPE = $TYPE$
            }
        }
        spawn_rebels = {
            type = lc_$TYPE$_rebels
            size = 3
        }
    }
}

spawn_big_rebels_by_local_concern = {
    if = {
        limit = {
            has_local_concern_level_1 = {
                TYPE = $TYPE$
            }
        }
        spawn_rebels = {
            type = lc_$TYPE$_rebels
            size = 3
        }
    }
    else_if = {
        limit = {
            has_local_concern_level_2 = {
                TYPE = $TYPE$
            }
        }
        spawn_rebels = {
            type = lc_$TYPE$_rebels
            size = 4
        }
    }
    else_if = {
        limit = {
            has_local_concern_level_3 = {
                TYPE = $TYPE$
            }
        }
        spawn_rebels = {
            type = lc_$TYPE$_rebels
            size = 5
        }
    }
}

adjust_income_by_local_concern = {
    if = {
        limit = {
            has_local_concern_level_1 = {
                TYPE = $TYPE$
            }
        }
        owner = { add_years_of_income = -0.1 }
    }
    else_if = {
        limit = {
            has_local_concern_level_2 = {
                TYPE = $TYPE$
            }
        }
        owner = { add_years_of_income = -0.2 }
    }
    else_if = {
        limit = {
            has_local_concern_level_3 = {
                TYPE = $TYPE$
            }
        }
        owner = { add_years_of_income = -0.3 }
    }
}

adjust_ADM_power_by_local_concern = {
    if = {
        limit = {
            has_local_concern_level_1 = {
                TYPE = $TYPE$
            }
        }
        owner = { add_adm_power = -20 }
    }
    else_if = {
        limit = {
            has_local_concern_level_2 = {
                TYPE = $TYPE$
            }
        }
        owner = { add_adm_power = -40 }
    }
    else_if = {
        limit = {
            has_local_concern_level_3 = {
                TYPE = $TYPE$
            }
        }
        owner = { add_adm_power = -60 }
    }
}

adjust_DIP_power_by_local_concern = {
    if = {
        limit = {
            has_local_concern_level_1 = {
                TYPE = $TYPE$
            }
        }
        owner = { add_dip_power = -20 }
    }
    else_if = {
        limit = {
            has_local_concern_level_2 = {
                TYPE = $TYPE$
            }
        }
        owner = { add_dip_power = -40 }
    }
    else_if = {
        limit = {
            has_local_concern_level_3 = {
                TYPE = $TYPE$
            }
        }
        owner = { add_dip_power = -60 }
    }
}

adjust_MIL_power_by_local_concern = {
    if = {
        limit = {
            has_local_concern_level_1 = {
                TYPE = $TYPE$
            }
        }
        owner = { add_mil_power = -20 }
    }
    else_if = {
        limit = {
            has_local_concern_level_2 = {
                TYPE = $TYPE$
            }
        }
        owner = { add_mil_power = -40 }
    }
    else_if = {
        limit = {
            has_local_concern_level_3 = {
                TYPE = $TYPE$
            }
        }
        owner = { add_mil_power = -60 }
    }
}

adjust_stability_by_local_concern = {
    if = {
        limit = {
            has_local_concern_level_1 = {
                TYPE = $TYPE$
            }
        }
        owner = { add_stability = -1 }
    }
    else_if = {
        limit = {
            has_local_concern_level_2 = {
                TYPE = $TYPE$
            }
        }
        owner = { add_stability = -2 }
    }
    else_if = {
        limit = {
            has_local_concern_level_3 = {
                TYPE = $TYPE$
            }
        }
        owner = { add_stability = -3 }
    }
}