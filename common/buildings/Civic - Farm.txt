# Do not change tags in here without changing every other reference to them.
# If adding new buildings, make sure they are uniquely named.

# cost = x #==> cost in $ to build (subject to other modifiers)
# time = x #==> number of months to build.
# modifier = m # a modifier on the province that the building gives
# build_trigger  = t # an and build_trigger  that needs to be fullfilled to build and keep the building
# one_per_country = yes/no # if yes, only one of these can exist in a country
# manufactory = { trade_good trade_good } # list of trade goods that get a production bonus
# onmap = yes/no # show as a sprite on the map
# indestructible = yes # Stops the buildings being destroyed by bankruptcy

# FROM = owner
# ROOT = province

# AI will consider buildings it does not have the tech for at 20% of scripted AI weight (in case it wants to save slots)

wow_farm_1 = {
	cost = 100
	time = 12
    
	modifier = {
		local_development_cost = -0.1
		trade_goods_size_modifier = 0.1
	}
	
    on_built = {
        if = { 
			limit = { has_global_flag = enable_building_logging }
			log = "DEBUG - [Root.GetName] - on_built - wow_farm_1 "
        }
        
        add_development_from_building = {
			building = wow_farm_1
			type = tax
			value = 1
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = wow_farm_1
			type = tax
			value = 1
		}
	}
	on_obsolete = {
	}
    
    ai_will_do = {
		factor = 10.0

		modifier = {
			factor = 0
			FROM = { num_of_loans = 3 }
		}
		modifier = {
			factor = 0.3
			FROM = { num_of_loans = 2 }
		}
		modifier = {
			factor = 0.5
			FROM = { num_of_loans = 1 }
		}
		modifier = {
			factor = 0.75
			FROM = { NOT = { treasury = 500 } }
		}
		modifier = {
			factor = 0.75
			FROM = { is_in_deficit = yes }
		}

		modifier = {
			factor = 1.2
			FROM = { treasury = 500 }
		}
		modifier = {
			factor = 1.3
			FROM = { treasury = 750 }
		}
		modifier = {
			factor = 1.4
			FROM = { treasury = 1000 }
		}

		modifier = {
			factor = 2.0
			FROM = { has_idea_group = wwu_innovation_ideas }
		}

		modifier = {
			factor = 3.0
			development = 20
		}
		modifier = {
			factor = 3.5
			development = 25
		}
		modifier = {
			factor = 4.0
			development = 30
		}
		modifier = {
			factor = 4.5
			development = 35
		}
		modifier = {
			factor = 5.0
			development = 40
		}

		modifier = {
			factor = 7.5
			wealthy_province_trigger = yes
		}

		modifier = {
			factor = 7.5
			has_every_essential_building_trigger = yes
		}
	}
}
wow_farm_2 = {
	cost = 300
	time = 24
    make_obsolete = wow_farm_1
    
	modifier = {
		local_development_cost = -0.15
		trade_goods_size_modifier = 0.15
	}
	
    on_built = {
        if = { 
			limit = { has_global_flag = enable_building_logging }
			log = "DEBUG - [Root.GetName] - on_built - wow_farm_2 "
		}
        
		add_development_from_upgrading_or_building = {
			building = wow_farm_2
			obsolete_building = wow_farm_1
			type = tax
			value = 2
			upgrade_value = 1
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = wow_farm_2
			type = tax
			value = 2
		}
	}
	on_obsolete = {
	}
    
    ai_will_do = {
		factor = 10.0

		modifier = {
			factor = 0
			FROM = { num_of_loans = 3 }
		}
		modifier = {
			factor = 0.3
			FROM = { num_of_loans = 2 }
		}
		modifier = {
			factor = 0.5
			FROM = { num_of_loans = 1 }
		}
		modifier = {
			factor = 0.75
			FROM = { NOT = { treasury = 500 } }
		}
		modifier = {
			factor = 0.75
			FROM = { is_in_deficit = yes }
		}

		modifier = {
			factor = 1.2
			FROM = { treasury = 500 }
		}
		modifier = {
			factor = 1.3
			FROM = { treasury = 750 }
		}
		modifier = {
			factor = 1.4
			FROM = { treasury = 1000 }
		}

		modifier = {
			factor = 2.0
			FROM = { has_idea_group = wwu_innovation_ideas }
		}

		modifier = {
			factor = 3.0
			development = 20
		}
		modifier = {
			factor = 3.5
			development = 25
		}
		modifier = {
			factor = 4.0
			development = 30
		}
		modifier = {
			factor = 4.5
			development = 35
		}
		modifier = {
			factor = 5.0
			development = 40
		}

		modifier = {
			factor = 7.5
			wealthy_province_trigger = yes
		}

		modifier = {
			factor = 7.5
			has_every_essential_building_trigger = yes
		}
	}
}
wow_farm_3 = {
	cost = 500
	time = 36
    make_obsolete = wow_farm_2
    
	modifier = {
		local_development_cost = -0.2
		trade_goods_size_modifier = 0.2
	}
	
    on_built = {
        if = { 
			limit = { has_global_flag = enable_building_logging }
			log = "DEBUG - [Root.GetName] - on_built - wow_farm_3 "
		}
        
		add_development_from_upgrading_or_building = {
			building = wow_farm_3
			obsolete_building = wow_farm_2
			type = tax
			value = 3
			upgrade_value = 1
		}
	}
	on_destroyed = {
		remove_development_from_building = {
			building = wow_farm_3
			type = tax
			value = 3
		}
	}
	on_obsolete = {
	}
    
    ai_will_do = {
		factor = 10.0

		modifier = {
			factor = 0
			FROM = { num_of_loans = 3 }
		}
		modifier = {
			factor = 0.3
			FROM = { num_of_loans = 2 }
		}
		modifier = {
			factor = 0.5
			FROM = { num_of_loans = 1 }
		}
		modifier = {
			factor = 0.75
			FROM = { NOT = { treasury = 500 } }
		}
		modifier = {
			factor = 0.75
			FROM = { is_in_deficit = yes }
		}

		modifier = {
			factor = 1.2
			FROM = { treasury = 500 }
		}
		modifier = {
			factor = 1.3
			FROM = { treasury = 750 }
		}
		modifier = {
			factor = 1.4
			FROM = { treasury = 1000 }
		}

		modifier = {
			factor = 2.0
			FROM = { has_idea_group = wwu_innovation_ideas }
		}

		modifier = {
			factor = 3.0
			development = 20
		}
		modifier = {
			factor = 3.5
			development = 25
		}
		modifier = {
			factor = 4.0
			development = 30
		}
		modifier = {
			factor = 4.5
			development = 35
		}
		modifier = {
			factor = 5.0
			development = 40
		}

		modifier = {
			factor = 7.5
			wealthy_province_trigger = yes
		}

		modifier = {
			factor = 7.5
			has_every_essential_building_trigger = yes
		}
	}
}