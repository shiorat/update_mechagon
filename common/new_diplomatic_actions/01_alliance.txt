#---------------------------------------
# Invite - Alliance
#---------------------------------------
# ROOT - Faction Leader
invite_to_alliance = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = invite_to_alliance_tooltip
	require_acceptance = yes
    
	is_visible = {  
        has_global_flag = enabled_faction_mechanics
		has_country_modifier = head_of_alliance
        FROM = {
            NOT = { has_country_modifier = member_of_alliance }
			NOT = { cannot_join_alliance = yes }
			NOT = { has_country_modifier = recent_faction_interaction }
		}
	}
	is_allowed = {
		has_country_modifier = head_of_alliance
		FROM = {
			NOT = { cannot_join_alliance = yes }
			NOT = { has_country_modifier = recent_faction_interaction }
		}
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - invite_to_alliance - accepted"
            }
        }
        
		FROM = {
            set_member_of_faction = {
                faction = alliance
            }
            add_country_modifier = {
                name = recent_faction_interaction
                duration = 365
            }
        }
	}
	on_decline = { 
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - invite_to_alliance - declined"
            }
        }
        
        FROM = {
            add_country_modifier = {
                name = recent_faction_interaction
                duration = 365
            }
        }
	}
	
	ai_acceptance = {
        #----------------------
        # Standard
        #----------------------
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = -25
			}
		}
		add_entry = {
			name = INV_ROOTPRESTIGE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = prestige
			}
			subtract_variable = { which = ai_value value = 25 }
			divide_variable = { which = ai_value value = 2 }
		}
		add_entry = {
			name = INV_OPINION
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			subtract_variable = { which = ai_value value = 25 }
		}
        
        #----------------------
        # Country Weights
        #----------------------
		add_entry = {
			name = INV_CIVILIZED
			limit = {
				FROM = { NOT = { is_civilized = yes } }
			}
			export_to_variable = {
				which = ai_value
				value = -25
			}
		}
        
        #----------------------
        # Religion Weights
        #----------------------
        add_entry = {
			name = INV_RELIGION_GROUP_LIGHT
			limit = {
				FROM = { religion_group = light_group }
			}
			export_to_variable = {
				which = ai_value
				value = 25
			}
		}
		add_entry = {
			name = INV_RELIGION_GROUP_DISORDER
			limit = {
				FROM = { 
                    religion_group = disorder_group
                }
			}
			export_to_variable = {
				which = ai_value
				value = -200
			}
		}
		add_entry = {
			name = INV_RELIGION_GROUP_DEATH
			limit = {
				FROM = { 
                    religion_group = death_group
                }
			}
			export_to_variable = {
				which = ai_value
				value = -200
			}
		}
		add_entry = {
			name = INV_RELIGION_GROUP_SHADOW
			limit = {
				FROM = { 
                    religion_group = shadow_group
                }
			}
			export_to_variable = {
				which = ai_value
				value = -200
			}
		}
        
        #----------------------
        # Cultural Weights
        #----------------------
		add_entry = {
			name = INV_NATURAL_ALLIANCE_MEMBER
			limit = {
				FROM = {
                    is_alliance_culture = yes
				}
			}
			export_to_variable = {
				which = ai_value
				value = 50
			}
		}
		add_entry = {
			name = INV_NOT_NATURAL_ALLIANCE_MEMBER
			limit = {
				FROM = {
                    NOT = { is_alliance_culture = yes }
				}
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_IS_NOT_FACTIONAL
			limit = {
				FROM = {
                    is_non_factional_culture = yes
				}
			}
			export_to_variable = {
				which = ai_value
				value = -25
			}
		}
		add_entry = {
			name = INV_DOES_NOT_JOIN_FACTIONS
			limit = {
				FROM = {
                    is_alien_culture = yes
				}
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
        
        #----------------------
        # Factional Weights
        #----------------------
		add_entry = {
			name = INV_OVER_15_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 15
                    all_country = {
                        has_country_modifier = member_of_alliance
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_OVER_20_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 20
                    all_country = {
                        has_country_modifier = member_of_alliance
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_OVER_25_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 25
                    all_country = {
                        has_country_modifier = member_of_alliance
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_HISTORICAL_MEMBER
			limit = {
				FROM = { is_historical_alliance_member = yes }
			}
			export_to_variable = {
				which = ai_value
				value = 200
			}
		}
		add_entry = {
			name = INV_HISTORICAL_ENEMY
			limit = {
				FROM = { is_historical_horde_member = yes }
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
		add_entry = {
			name = INV_ALLIANCE_WITH_MEMBER
			limit = {
				any_country = {
                    has_country_modifier = member_of_alliance
                    alliance_with = FROM
                }
			}
			export_to_variable = {
				which = ai_value
				value = 25
			}
		}
		add_entry = {
			name = INV_ALLIANCE_WITH_ENEMY
			limit = {
				any_country = {
                    OR = {
                        has_country_modifier = member_of_old_horde
                        has_country_modifier = member_of_horde
                    }
                    alliance_with = FROM
                }
			}
			export_to_variable = {
				which = ai_value
				value = -100
			}
		}
		add_entry = {
			name = INV_CANNOT_JOIN_ALLIANCE
			limit = {
				FROM = {
					OR = {
                        is_uncivilized = yes
                        cannot_join_alliance = yes
                    }
				}
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
		add_entry = {
			name = INV_NOT_ON_AZEROTH
			limit = {
				FROM = {
                    NOT = {
                        is_capital_on_azeroth = yes
                    }
				}
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
	}

	ai_will_do = {
        # AI will stop after 15 members
        NOT = {
            calc_true_if = {
                amount = 15
                all_country = {
                    has_country_modifier = member_of_alliance
                }
            }
        }
	}
}

#---------------------------------------
# Invite - Horde
#---------------------------------------
# ROOT - Faction Leader
invite_to_horde = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = invite_to_horde_tooltip
	require_acceptance = yes
    
	is_visible = {
        has_global_flag = enabled_faction_mechanics
		has_country_modifier = head_of_horde
        FROM = {
            NOT = { has_country_modifier = member_of_horde }
			NOT = { cannot_join_horde = yes }
			NOT = { has_country_modifier = recent_faction_interaction }
		}
	}
	is_allowed = {
		has_country_modifier = head_of_horde
		FROM = {
			NOT = { cannot_join_horde = yes }
			NOT = { has_country_modifier = recent_faction_interaction }
		}
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - invite_to_horde - accepted"
            }
        }
        
		FROM = {
            set_member_of_faction = {
                faction = horde
            }
            add_country_modifier = {
                name = recent_faction_interaction
                duration = 365
            }
        }
	}
	on_decline = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - invite_to_horde - declined"
            }
        }
        
        FROM = {
            add_country_modifier = {
                name = recent_faction_interaction
                duration = 365
            }
        }
	}
	
	ai_acceptance = {
        #----------------------
        # Standard
        #----------------------
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = -25
			}
		}
		add_entry = {
			name = INV_ROOTPRESTIGE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = prestige
			}
			subtract_variable = { which = ai_value value = 25 }
			divide_variable = { which = ai_value value = 2 }
		}
		add_entry = {
			name = INV_OPINION
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			subtract_variable = { which = ai_value value = 25 }
		}
        
        #----------------------
        # Country Weights
        #----------------------
		add_entry = {
			name = INV_CIVILIZED
			limit = {
				FROM = { NOT = { is_civilized = yes } }
			}
			export_to_variable = {
				which = ai_value
				value = 25
			}
		}
		add_entry = {
			name = INV_KALIMDOR_NATIVE
			limit = {
				FROM = {
                    capital_scope = {
                        continent = continent_kalimdor
                    }
				}
			}
			export_to_variable = {
				which = ai_value
				value = 25
			}
		}
        
        #----------------------
        # Religion Weights
        #----------------------
        add_entry = {
			name = INV_RELIGION_GROUP_ELEMENTAL
			limit = {
				FROM = { religion_group = elemental_group }
			}
			export_to_variable = {
				which = ai_value
				value = 25
			}
		}
        
        #----------------------
        # Cultural Weights
        #----------------------
		add_entry = {
			name = INV_NATURAL_HORDE
			limit = {
				FROM = {
                    is_horde_culture = yes
				}
			}
			export_to_variable = {
				which = ai_value
				value = 50
			}
		}
		add_entry = {
			name = INV_NOT_NATURAL_HORDE
			limit = {
				FROM = {
                    NOT = { is_horde_culture = yes }
				}
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_IS_NOT_FACTIONAL
			limit = {
				FROM = {
                    is_non_factional_culture = yes
				}
			}
			export_to_variable = {
				which = ai_value
				value = -25
			}
		}
		add_entry = {
			name = INV_DOES_NOT_JOIN_FACTIONS
			limit = {
				FROM = {
                    is_alien_culture = yes
				}
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
        
        #----------------------
        # Factional Weights
        #----------------------
		add_entry = {
			name = INV_OVER_15_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 15
                    all_country = {
                        has_country_modifier = member_of_horde
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_OVER_20_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 20
                    all_country = {
                        has_country_modifier = member_of_horde
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_OVER_25_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 25
                    all_country = {
                        has_country_modifier = member_of_horde
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_HISTORICAL_MEMBER
			limit = {
				FROM = { is_historical_horde_member = yes }
			}
			export_to_variable = {
				which = ai_value
				value = 150
			}
		}
		add_entry = {
			name = INV_HISTORICAL_ENEMY
			limit = {
				FROM = { is_historical_alliance_member = yes }
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
		add_entry = {
			name = INV_ALLIANCE_WITH_MEMBER
			limit = {
				any_country = {
                    has_country_modifier = member_of_horde
                    alliance_with = FROM
                }
			}
			export_to_variable = {
				which = ai_value
				value = 25
			}
		}
		add_entry = {
			name = INV_ALLIANCE_WITH_ENEMY
			limit = {
				any_country = {
                    has_country_modifier = member_of_alliance
                    alliance_with = FROM
                }
			}
			export_to_variable = {
				which = ai_value
				value = -100
			}
		}
		add_entry = {
			name = INV_CANNOT_JOIN_HORDE
			limit = {
				FROM = {
					OR = {
                        is_uncivilized = yes
                        cannot_join_horde = yes
                    }
				}
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
		add_entry = {
			name = INV_NOT_ON_AZEROTH
			limit = {
				FROM = {
                    NOT = {
                        is_capital_on_azeroth = yes
                    }
				}
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
	}

	ai_will_do = {
		# AI will stop after 15 members
        NOT = {
            calc_true_if = {
                amount = 15
                all_country = {
                    has_country_modifier = member_of_horde
                }
            }
        }
	}
}

#---------------------------------------
# Invite - Old Horde
#---------------------------------------
# ROOT - Faction Leader
invite_to_old_horde = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = invite_to_old_horde_tooltip
	require_acceptance = yes
    
	is_visible = {
        has_global_flag = enabled_faction_mechanics
		has_country_modifier = head_of_old_horde
        FROM = {
            NOT = { has_country_modifier = member_of_old_horde }
			NOT = { cannot_join_old_horde = yes }
			NOT = { has_country_modifier = recent_faction_interaction }
		}
	}
	is_allowed = {
		has_country_modifier = head_of_old_horde
		FROM = {
			NOT = { cannot_join_old_horde = yes }
			NOT = { has_country_modifier = recent_faction_interaction }
            # Only allow Draenor nations before the Dark Portal is built
            if = {
                limit = {
                    has_global_flag = dark_portal_built
                }
                capital_scope = {
                    continent = continent_draenor
                }
            }
		}
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - invite_to_old_horde - accepted"
            }
        }
        
		FROM = {
            set_member_of_faction = {
                faction = old_horde
            }
            add_country_modifier = {
                name = recent_faction_interaction
                duration = 365
            }
        }
	}
	on_decline = { 
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - invite_to_old_horde - declined"
            }
        }
        
        FROM = {
            add_country_modifier = {
                name = recent_faction_interaction
                duration = 365
            }
        }
	}
	
	ai_acceptance = {
        #----------------------
        # Standard
        #----------------------
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = -25
			}
		}
		add_entry = {
			name = INV_ROOTPRESTIGE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = prestige
			}
			subtract_variable = { which = ai_value value = 25 }
			divide_variable = { which = ai_value value = 2 }
		}
		add_entry = {
			name = INV_OPINION
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			subtract_variable = { which = ai_value value = 25 }
		}
        
        #----------------------
        # Country Weights
        #----------------------
		add_entry = {
			name = INV_CIVILIZED
			limit = {
				FROM = { NOT = { is_civilized = yes } }
			}
			export_to_variable = {
				which = ai_value
				value = 25
			}
		}
        
        #----------------------
        # Religion Weights
        #----------------------
        add_entry = {
			name = INV_RELIGION_GROUP_ELEMENTAL
			limit = {
				FROM = { religion_group = elemental_group }
			}
			export_to_variable = {
				which = ai_value
				value = 25
			}
		}
        add_entry = {
			name = INV_RELIGION_GROUP_DISORDER
			limit = {
				FROM = { religion_group = disorder_group }
			}
			export_to_variable = {
				which = ai_value
				value = 25
			}
		}
		add_entry = {
			name = INV_RELIGION_GROUP_LIGHT
			limit = {
				FROM = { 
                    religion_group = light_group
                }
			}
			export_to_variable = {
				which = ai_value
				value = -200
			}
		}
        
        #----------------------
        # Cultural Weights
        #----------------------
		add_entry = {
			name = INV_NATURAL_HORDE
			limit = {
				FROM = {
                    is_old_horde_culture = yes
				}
			}
			export_to_variable = {
				which = ai_value
				value = 50
			}
		}
		add_entry = {
			name = INV_NOT_NATURAL_HORDE
			limit = {
				FROM = {
                    NOT = { is_old_horde_culture = yes }
				}
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_IS_NOT_FACTIONAL
			limit = {
				FROM = {
                    is_non_factional_culture = yes
				}
			}
			export_to_variable = {
				which = ai_value
				value = -25
			}
		}
		add_entry = {
			name = INV_DOES_NOT_JOIN_FACTIONS
			limit = {
				FROM = {
                    is_alien_culture = yes
				}
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
        
        #----------------------
        # Factional Weights
        #----------------------
		add_entry = {
			name = INV_OVER_15_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 15
                    all_country = {
                        has_country_modifier = member_of_old_horde
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_OVER_20_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 20
                    all_country = {
                        has_country_modifier = member_of_old_horde
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_OVER_25_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 25
                    all_country = {
                        has_country_modifier = member_of_old_horde
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_HISTORICAL_MEMBER
			limit = {
				FROM = { is_historical_horde_member = yes }
			}
			export_to_variable = {
				which = ai_value
				value = 150
			}
		}
		add_entry = {
			name = INV_HISTORICAL_ENEMY
			limit = {
				FROM = { is_historical_alliance_member = yes }
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
		add_entry = {
			name = INV_ALLIANCE_WITH_MEMBER
			limit = {
				any_country = {
                    has_country_modifier = member_of_old_horde
                    alliance_with = FROM
                }
			}
			export_to_variable = {
				which = ai_value
				value = 25
			}
		}
		add_entry = {
			name = INV_ALLIANCE_WITH_ENEMY
			limit = {
				any_country = {
                    has_country_modifier = member_of_alliance
                    alliance_with = FROM
                }
			}
			export_to_variable = {
				which = ai_value
				value = -100
			}
		}
		add_entry = {
			name = INV_CANNOT_JOIN_HORDE
			limit = {
				FROM = {
					OR = {
                        is_uncivilized = yes
                        cannot_join_old_horde = yes
                    }
				}
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
	}

	ai_will_do = {
		# AI will stop after 15 members
        NOT = {
            calc_true_if = {
                amount = 15
                all_country = {
                    has_country_modifier = member_of_old_horde
                }
            }
        }
	}
}

#---------------------------------------
# Invite - Trade Coalition
#---------------------------------------
# ROOT - Faction Leader
invite_to_trade_coalition = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = invite_to_trade_coalition_tooltip
	require_acceptance = yes
    
	is_visible = {
        has_global_flag = enabled_faction_mechanics
		has_country_modifier = head_of_trade_coalition
        FROM = {
            NOT = { has_country_modifier = member_of_trade_coalition }
			NOT = { cannot_join_trade_coalition = yes }
			NOT = { has_country_modifier = recent_faction_interaction }
		}
	}
	is_allowed = {
		has_country_modifier = head_of_trade_coalition
		FROM = {
			NOT = { cannot_join_trade_coalition = yes }
			NOT = { has_country_modifier = recent_faction_interaction }
		}
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - invite_to_trade_coalition - accepted"
            }
        }
        
		FROM = {
            set_member_of_faction = {
                faction = trade_coalition
            }
            add_country_modifier = {
                name = recent_faction_interaction
                duration = 365
            }
        }
	}
	on_decline = { 
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - invite_to_trade_coalition - declined"
            }
        }
        
        FROM = {
            add_country_modifier = {
                name = recent_faction_interaction
                duration = 365
            }
        }
	}
	
	ai_acceptance = {
        #----------------------
        # Standard
        #----------------------
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = -25
			}
		}
		add_entry = {
			name = INV_ROOTPRESTIGE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = prestige
			}
			subtract_variable = { which = ai_value value = 25 }
			divide_variable = { which = ai_value value = 2 }
		}
		add_entry = {
			name = INV_OPINION
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			subtract_variable = { which = ai_value value = 25 }
		}
        
        #----------------------
        # Religion Weights
        #----------------------
        add_entry = {
			name = INV_RELIGION_GROUP_PHILOSOPHY
			limit = {
				FROM = { religion_group = philosophy_group }
			}
			export_to_variable = {
				which = ai_value
				value = 25
			}
		}
    
        #----------------------
        # Cultural Weights
        #----------------------
		add_entry = {
			name = INV_NATURAL_TRADE_COALITION
			limit = {
				FROM = {
                    is_trade_coalition_culture = yes
				}
			}
			export_to_variable = {
				which = ai_value
				value = 50
			}
		}
		add_entry = {
			name = INV_NOT_NATURAL_TRADE_COALITION
			limit = {
				FROM = {
                    NOT = { is_trade_coalition_culture = yes }
				}
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_IS_NOT_FACTIONAL
			limit = {
				FROM = {
                    is_non_factional_culture = yes
				}
			}
			export_to_variable = {
				which = ai_value
				value = -25
			}
		}
		add_entry = {
			name = INV_DOES_NOT_JOIN_FACTIONS
			limit = {
				FROM = {
                    is_alien_culture = yes
				}
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
        
        #----------------------
        # Factional Weights
        #----------------------
		add_entry = {
			name = INV_OVER_5_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 5
                    all_country = {
                        has_country_modifier = member_of_trade_coalition
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_OVER_10_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 10
                    all_country = {
                        has_country_modifier = member_of_trade_coalition
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_OVER_15_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 15
                    all_country = {
                        has_country_modifier = member_of_trade_coalition
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_HISTORICAL_MEMBER
			limit = {
				FROM = { is_historical_trade_coalition_member = yes }
			}
			export_to_variable = {
				which = ai_value
				value = 200
			}
		}
		add_entry = {
			name = INV_ALLIANCE_WITH_MEMBER
			limit = {
				any_country = {
                    has_country_modifier = member_of_trade_coalition
                    alliance_with = FROM
                }
			}
			export_to_variable = {
				which = ai_value
				value = 25
			}
		}
		add_entry = {
			name = INV_CANNOT_JOIN_TRADE_COALITION
			limit = {
				FROM = {
					OR = {
                        is_uncivilized = yes
                        cannot_join_trade_coalition = yes
                    }
				}
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
		add_entry = {
			name = INV_NOT_ON_AZEROTH
			limit = {
				FROM = {
                    NOT = {
                        is_capital_on_azeroth = yes
                    }
				}
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
	}

	ai_will_do = {
		# AI will stop after 8 members
        NOT = {
            calc_true_if = {
                amount = 8
                all_country = {
                    has_country_modifier = member_of_trade_coalition
                }
            }
        }
	}
}

#---------------------------------------
# Join - Alliance
#---------------------------------------
# ROOT - Potential Member
join_the_alliance = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = join_the_alliance_tooltip
	require_acceptance = yes
    
	is_visible = {
        has_global_flag = enabled_faction_mechanics
		NOT = { has_country_modifier = member_of_alliance }
        NOT = { cannot_join_alliance = yes }
        FROM = { 
            has_country_modifier = head_of_alliance
        }
	}
	is_allowed = {
		NOT = { has_country_modifier = member_of_alliance }
        NOT = { cannot_join_alliance = yes }
        NOT = { has_country_modifier = recent_faction_interaction }
        FROM = { 
            has_country_modifier = head_of_alliance
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - join_the_alliance - accepted"
            }
        }
        
		set_member_of_faction = {
            faction = alliance
        }
        add_country_modifier = {
            name = recent_faction_interaction
            duration = 365
        }
	}
	on_decline = { 
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - join_the_alliance - declined"
            }
        }
        
        add_country_modifier = {
            name = recent_faction_interaction
            duration = 365
        }
	}
	
	ai_acceptance = {
        #----------------------
        # Standard
        #----------------------
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = -25
			}
		}
		add_entry = {
			name = INV_ROOTPRESTIGE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = prestige
			}
			subtract_variable = { which = ai_value value = 25 }
			divide_variable = { which = ai_value value = 2 }
		}
		add_entry = {
			name = INV_OPINION
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = ROOT
				with = FROM
			}
			subtract_variable = { which = ai_value value = 25 }
		}
        
        #----------------------
        # Country Weights
        #----------------------
		add_entry = {
			name = INV_CIVILIZED
			limit = {
                NOT = { is_civilized = yes }
			}
			export_to_variable = {
				which = ai_value
				value = -25
			}
		}
        
        #----------------------
        # Religion Weights
        #----------------------
        add_entry = {
			name = INV_RELIGION_GROUP_LIGHT
			limit = {
                religion_group = light_group
			}
			export_to_variable = {
				which = ai_value
				value = 25
			}
		}
		add_entry = {
			name = INV_RELIGION_GROUP_DISORDER
			limit = {
				religion_group = disorder_group
			}
			export_to_variable = {
				which = ai_value
				value = -200
			}
		}
		add_entry = {
			name = INV_RELIGION_GROUP_DEATH
			limit = {
				religion_group = death_group
			}
			export_to_variable = {
				which = ai_value
				value = -200
			}
		}
		add_entry = {
			name = INV_RELIGION_GROUP_SHADOW
			limit = {
				religion_group = shadow_group
			}
			export_to_variable = {
				which = ai_value
				value = -200
			}
		}
        
        #----------------------
        # Cultural Weights
        #----------------------
		add_entry = {
			name = INV_NATURAL_ALLIANCE_MEMBER
			limit = {
				is_alliance_culture = yes
			}
			export_to_variable = {
				which = ai_value
				value = 50
			}
		}
		add_entry = {
			name = INV_NOT_NATURAL_ALLIANCE_MEMBER
			limit = {
                NOT = { is_alliance_culture = yes }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_IS_NOT_FACTIONAL
			limit = {
				is_non_factional_culture = yes
			}
			export_to_variable = {
				which = ai_value
				value = -25
			}
		}
		add_entry = {
			name = INV_DOES_NOT_JOIN_FACTIONS
			limit = {
                is_alien_culture = yes
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
        
        #----------------------
        # Factional Weights
        #----------------------
		add_entry = {
			name = INV_OVER_15_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 15
                    all_country = {
                        has_country_modifier = member_of_alliance
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_OVER_20_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 20
                    all_country = {
                        has_country_modifier = member_of_alliance
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_OVER_25_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 25
                    all_country = {
                        has_country_modifier = member_of_alliance
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_HISTORICAL_MEMBER
			limit = {
                is_historical_alliance_member = yes
			}
			export_to_variable = {
				which = ai_value
				value = 200
			}
		}
		add_entry = {
			name = INV_HISTORICAL_ENEMY
			limit = {
                is_historical_horde_member = yes
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
		add_entry = {
			name = INV_CANNOT_JOIN_ALLIANCE
			limit = {
				OR = {
                    is_uncivilized = yes
                    cannot_join_alliance = yes
                }
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
	}

	ai_will_do = {
		# AI will stop after 15 members
        NOT = {
            calc_true_if = {
                amount = 15
                all_country = {
                    has_country_modifier = member_of_alliance
                }
            }
        }
	}
}

#---------------------------------------
# Join - Horde
#---------------------------------------
# ROOT - Potential Member
join_the_horde = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = join_the_horde_tooltip
	require_acceptance = yes
    
	is_visible = {
        has_global_flag = enabled_faction_mechanics
		NOT = { has_country_modifier = member_of_horde }
        NOT = { cannot_join_horde = yes }
        FROM = { 
            has_country_modifier = head_of_horde
        }
	}
	is_allowed = {
		NOT = { has_country_modifier = member_of_horde }
        NOT = { cannot_join_horde = yes }
        NOT = { has_country_modifier = recent_faction_interaction }
        FROM = { 
            has_country_modifier = head_of_horde
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - join_the_horde - accepted"
            }
        }
        
		set_member_of_faction = {
            faction = horde
        }
        add_country_modifier = {
            name = recent_faction_interaction
            duration = 365
        }
	}
	on_decline = { 
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - join_the_horde - declined"
            }
        }
        
        add_country_modifier = {
            name = recent_faction_interaction
            duration = 365
        }
	}
	
	ai_acceptance = {
        #----------------------
        # Standard
        #----------------------
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = -25
			}
		}
		add_entry = {
			name = INV_ROOTPRESTIGE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = prestige
			}
			subtract_variable = { which = ai_value value = 25 }
			divide_variable = { which = ai_value value = 2 }
		}
		add_entry = {
			name = INV_OPINION
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = ROOT
				with = FROM
			}
			subtract_variable = { which = ai_value value = 25 }
		}
        
        #----------------------
        # Country Weights
        #----------------------
		add_entry = {
			name = INV_CIVILIZED
			limit = {
                NOT = { is_civilized = yes }
			}
			export_to_variable = {
				which = ai_value
				value = 25
			}
		}
		add_entry = {
			name = INV_KALIMDOR_NATIVE
			limit = {
                capital_scope = {
                    continent = continent_kalimdor
                }
			}
			export_to_variable = {
				which = ai_value
				value = 25
			}
		}
        
        #----------------------
        # Religion Weights
        #----------------------
        add_entry = {
			name = INV_RELIGION_GROUP_ELEMENTAL
			limit = {
                religion_group = elemental_group
			}
			export_to_variable = {
				which = ai_value
				value = 25
			}
		}
        
        #----------------------
        # Cultural Weights
        #----------------------
		add_entry = {
			name = INV_NATURAL_HORDE
			limit = {
                is_horde_culture = yes
			}
			export_to_variable = {
				which = ai_value
				value = 50
			}
		}
		add_entry = {
			name = INV_NOT_NATURAL_HORDE
			limit = {
                NOT = { is_horde_culture = yes }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_IS_NOT_FACTIONAL
			limit = {
                is_non_factional_culture = yes
			}
			export_to_variable = {
				which = ai_value
				value = -25
			}
		}
		add_entry = {
			name = INV_DOES_NOT_JOIN_FACTIONS
			limit = {
                is_alien_culture = yes
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
        
        #----------------------
        # Factional Weights
        #----------------------
		add_entry = {
			name = INV_OVER_15_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 15
                    all_country = {
                        has_country_modifier = member_of_horde
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_OVER_20_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 20
                    all_country = {
                        has_country_modifier = member_of_horde
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_OVER_25_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 25
                    all_country = {
                        has_country_modifier = member_of_horde
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_HISTORICAL_MEMBER
			limit = {
                is_historical_horde_member = yes
			}
			export_to_variable = {
				which = ai_value
				value = 200
			}
		}
		add_entry = {
			name = INV_HISTORICAL_ENEMY
			limit = {
                is_historical_alliance_member = yes
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
		add_entry = {
			name = INV_CANNOT_JOIN_HORDE
			limit = {
				OR = {
                    is_uncivilized = yes
                    cannot_join_horde = yes
                }
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
	}

	ai_will_do = {
		# AI will stop after 15 members
        NOT = {
            calc_true_if = {
                amount = 15
                all_country = {
                    has_country_modifier = member_of_horde
                }
            }
        }
	}
}

#---------------------------------------
# Join - Old Horde
#---------------------------------------
# ROOT - Potential Member
join_the_old_horde = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = join_the_old_horde_tooltip
	require_acceptance = yes
    
	is_visible = {
        has_global_flag = enabled_faction_mechanics
		NOT = { has_country_modifier = member_of_old_horde }
        NOT = { cannot_join_old_horde = yes }
        FROM = { 
            has_country_modifier = head_of_old_horde
        }
	}
	is_allowed = {
		NOT = { has_country_modifier = member_of_old_horde }
        NOT = { cannot_join_old_horde = yes }
        NOT = { has_country_modifier = recent_faction_interaction }
        # Only allow Draenor nations before the Dark Portal is built
        if = {
            limit = {
                has_global_flag = dark_portal_built
            }
            capital_scope = {
                continent = continent_draenor
            }
        }
        FROM = { 
            has_country_modifier = head_of_old_horde
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - join_the_old_horde - accepted"
            }
        }
        
		set_member_of_faction = {
            faction = old_horde
        }
        add_country_modifier = {
            name = recent_faction_interaction
            duration = 365
        }
	}
	on_decline = { 
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - join_the_old_horde - declined"
            }
        }
        
        add_country_modifier = {
            name = recent_faction_interaction
            duration = 365
        }
	}
	
	ai_acceptance = {
        #----------------------
        # Standard
        #----------------------
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = -25
			}
		}
		add_entry = {
			name = INV_ROOTPRESTIGE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = prestige
			}
			subtract_variable = { which = ai_value value = 25 }
			divide_variable = { which = ai_value value = 2 }
		}
		add_entry = {
			name = INV_OPINION
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = ROOT
				with = FROM
			}
			subtract_variable = { which = ai_value value = 25 }
		}
        
        #----------------------
        # Country Weights
        #----------------------
		add_entry = {
			name = INV_CIVILIZED
			limit = {
                NOT = { is_civilized = yes }
			}
			export_to_variable = {
				which = ai_value
				value = 25
			}
		}
        
        #----------------------
        # Religion Weights
        #----------------------
        add_entry = {
			name = INV_RELIGION_GROUP_ELEMENTAL
			limit = {
                religion_group = elemental_group
			}
			export_to_variable = {
				which = ai_value
				value = 25
			}
		}
        add_entry = {
			name = INV_RELIGION_GROUP_DISORDER
			limit = {
                religion_group = disorder_group
			}
			export_to_variable = {
				which = ai_value
				value = 25
			}
		}
		add_entry = {
			name = INV_RELIGION_GROUP_LIGHT
			limit = {
				religion_group = light_group
			}
			export_to_variable = {
				which = ai_value
				value = -200
			}
		}
        
        #----------------------
        # Cultural Weights
        #----------------------
		add_entry = {
			name = INV_NATURAL_HORDE
			limit = {
                is_old_horde_culture = yes
			}
			export_to_variable = {
				which = ai_value
				value = 50
			}
		}
		add_entry = {
			name = INV_NOT_NATURAL_HORDE
			limit = {
                NOT = { is_old_horde_culture = yes }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_IS_NOT_FACTIONAL
			limit = {
                is_non_factional_culture = yes
			}
			export_to_variable = {
				which = ai_value
				value = -25
			}
		}
		add_entry = {
			name = INV_DOES_NOT_JOIN_FACTIONS
			limit = {
                is_alien_culture = yes
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
        
        #----------------------
        # Factional Weights
        #----------------------
		add_entry = {
			name = INV_OVER_15_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 15
                    all_country = {
                        has_country_modifier = member_of_old_horde
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_OVER_20_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 20
                    all_country = {
                        has_country_modifier = member_of_old_horde
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_OVER_25_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 25
                    all_country = {
                        has_country_modifier = member_of_old_horde
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_HISTORICAL_MEMBER
			limit = {
                is_historical_old_horde_member = yes
			}
			export_to_variable = {
				which = ai_value
				value = 200
			}
		}
		add_entry = {
			name = INV_HISTORICAL_ENEMY
			limit = {
                is_historical_alliance_member = yes
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
		add_entry = {
			name = INV_CANNOT_JOIN_HORDE
			limit = {
				OR = {
                    is_uncivilized = yes
                    cannot_join_old_horde = yes
                }
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
	}

	ai_will_do = {
		# AI will stop after 15 members
        NOT = {
            calc_true_if = {
                amount = 15
                all_country = {
                    has_country_modifier = member_of_old_horde
                }
            }
        }
	}
}

#---------------------------------------
# Join - Trade Coalition
#---------------------------------------
# ROOT - Potential Member
join_the_trade_coalition = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = join_the_trade_coalition_tooltip
	require_acceptance = yes
    
	is_visible = {
        has_global_flag = enabled_faction_mechanics
		NOT = { has_country_modifier = member_of_trade_coalition }
        NOT = { cannot_join_trade_coalition = yes }
        FROM = { 
            has_country_modifier = head_of_trade_coalition
        }
	}
	is_allowed = {
		NOT = { has_country_modifier = member_of_trade_coalition }
        NOT = { cannot_join_trade_coalition = yes }
        NOT = { has_country_modifier = recent_faction_interaction }
        FROM = { 
            has_country_modifier = head_of_trade_coalition
        }
	}
	on_accept = {   
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - join_the_trade_coalition - accepted"
            }
        }
        
		set_member_of_faction = {
            faction = trade_coalition
        }
        add_country_modifier = {
            name = recent_faction_interaction
            duration = 365
        }
	}
	on_decline = { 
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - join_the_trade_coalition - declined"
            }
        }
        
        add_country_modifier = {
            name = recent_faction_interaction
            duration = 365
        }
	}
	
	ai_acceptance = {
        #----------------------
        # Standard
        #----------------------
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = -25
			}
		}
		add_entry = {
			name = INV_ROOTPRESTIGE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = prestige
			}
			subtract_variable = { which = ai_value value = 25 }
			divide_variable = { which = ai_value value = 2 }
		}
		add_entry = {
			name = INV_OPINION
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = ROOT
				with = FROM
			}
			subtract_variable = { which = ai_value value = 25 }
		}
        
        #----------------------
        # Religion Weights
        #----------------------
        add_entry = {
			name = INV_RELIGION_GROUP_PHILOSOPHY
			limit = {
				religion_group = philosophy_group
			}
			export_to_variable = {
				which = ai_value
				value = 25
			}
		}
        
        #----------------------
        # Cultural Weights
        #----------------------
		add_entry = {
			name = INV_NATURAL_TRADE_COALITION
			limit = {
                is_trade_coalition_culture = yes
			}
			export_to_variable = {
				which = ai_value
				value = 50
			}
		}
		add_entry = {
			name = INV_NOT_NATURAL_TRADE_COALITION
			limit = {
                NOT = { is_trade_coalition_culture = yes }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_IS_NOT_FACTIONAL
			limit = {
                is_non_factional_culture = yes
			}
			export_to_variable = {
				which = ai_value
				value = -25
			}
		}
		add_entry = {
			name = INV_DOES_NOT_JOIN_FACTIONS
			limit = {
                is_alien_culture = yes
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
        
        #----------------------
        # Factional Weights
        #----------------------
		add_entry = {
			name = INV_OVER_5_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 5
                    all_country = {
                        has_country_modifier = member_of_trade_coalition
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_OVER_10_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 10
                    all_country = {
                        has_country_modifier = member_of_trade_coalition
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_OVER_15_MEMBERS
			limit = {
				calc_true_if = {
                    amount = 15
                    all_country = {
                        has_country_modifier = member_of_trade_coalition
                    }
                }
			}
			export_to_variable = {
				which = ai_value
				value = -50
			}
		}
		add_entry = {
			name = INV_HISTORICAL_MEMBER
			limit = {
                is_historical_trade_coalition_member = yes
			}
			export_to_variable = {
				which = ai_value
				value = 200
			}
		}
		add_entry = {
			name = INV_CANNOT_JOIN_TRADE_COALITION
			limit = {
				OR = {
                    is_uncivilized = yes
                    cannot_join_trade_coalition = yes
                }
			}
			export_to_variable = {
				which = ai_value
				value = -1000
			}
		}
	}

	ai_will_do = {
		# AI will stop after 8 members
        NOT = {
            calc_true_if = {
                amount = 8
                all_country = {
                    has_country_modifier = member_of_trade_coalition
                }
            }
        }
	}
}

#---------------------------------------
# Kick - Alliance
#---------------------------------------
# ROOT - Faction Leader
kick_from_alliance = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = kick_from_alliance_tooltip
	require_acceptance = no
    
	is_visible = {
        has_global_flag = enabled_faction_mechanics
		has_country_modifier = head_of_alliance
        FROM = {
			has_country_modifier = member_of_alliance
		}
	}
	is_allowed = {
		has_country_modifier = head_of_alliance
		FROM = {
			has_country_modifier = member_of_alliance
		}
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - kick_from_alliance"
            }
        }
        
		FROM = {
            remove_country_modifier = member_of_alliance
            country_event = { id = wwu_faction_system.40 }
        }
	}
	on_decline = { 
        FROM = {
            remove_country_modifier = member_of_alliance
            country_event = { id = wwu_faction_system.40 }
        }
	}
	
	ai_acceptance = {
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = 1000
			}
		}
	}

	ai_will_do = {
        OR = {
            # AI will kick if the leader's opinion of them is very low
            NOT = {
                has_opinion = {
                    who = FROM
                    value = -150
                }
            }
            # Target is a subject to a non-member overlord
            FROM = {
				is_subject = yes
				overlord = {
					NOT = { has_country_modifier = member_of_alliance }
				}
			}
        }
	}
}

#---------------------------------------
# Kick - Horde
#---------------------------------------
# ROOT - Faction Leader
kick_from_horde = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = kick_from_horde_tooltip
	require_acceptance = no
    
	is_visible = {
        has_global_flag = enabled_faction_mechanics
		has_country_modifier = head_of_horde
        FROM = {
			has_country_modifier = member_of_horde
		}
	}
	is_allowed = {
		has_country_modifier = head_of_horde
		FROM = {
			has_country_modifier = member_of_horde
		}
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - kick_from_horde"
            }
        }
        
		FROM = {
            remove_country_modifier = member_of_horde
            country_event = { id = wwu_faction_system.41 }
        }
	}
	on_decline = { 
        FROM = {
            remove_country_modifier = member_of_horde
            country_event = { id = wwu_faction_system.41 }
        }
	}
	
	ai_acceptance = {
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = 1000
			}
		}
	}

	ai_will_do = {
        OR = {
            # AI will kick if the leader's opinion of them is very low
            NOT = {
                has_opinion = {
                    who = FROM
                    value = -150
                }
            }
            # Target is a subject to a non-member overlord
            FROM = {
				is_subject = yes
				overlord = {
					NOT = { has_country_modifier = member_of_horde }
				}
			}
        }
	}
}

#---------------------------------------
# Kick - Old Horde
#---------------------------------------
# ROOT - Faction Leader
kick_from_old_horde = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = kick_from_old_horde_tooltip
	require_acceptance = no
    
	is_visible = {
        has_global_flag = enabled_faction_mechanics
		has_country_modifier = head_of_old_horde
        FROM = {
			has_country_modifier = member_of_old_horde
		}
	}
	is_allowed = {
		has_country_modifier = head_of_old_horde
		FROM = {
			has_country_modifier = member_of_old_horde
		}
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - kick_from_old_horde"
            }
        }
        
		FROM = {
            remove_country_modifier = member_of_old_horde
            country_event = { id = wwu_faction_system.42 }
        }
	}
	on_decline = { 
        FROM = {
            remove_country_modifier = member_of_old_horde
            country_event = { id = wwu_faction_system.42 }
        }
	}
	
	ai_acceptance = {
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = 1000
			}
		}
	}

	ai_will_do = {
        OR = {
            # AI will kick if the leader's opinion of them is very low
            NOT = {
                has_opinion = {
                    who = FROM
                    value = -150
                }
            }
            # Target is a subject to a non-member overlord
            FROM = {
				is_subject = yes
				overlord = {
					NOT = { has_country_modifier = member_of_old_horde }
				}
			}
        }
	}
}

#---------------------------------------
# Kick - Trade Coalition
#---------------------------------------
# ROOT - Faction Leader
kick_from_trade_coalition = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = kick_from_trade_coalition_tooltip
	require_acceptance = no
    
	is_visible = {
        has_global_flag = enabled_faction_mechanics
		has_country_modifier = head_of_trade_coalition
        FROM = {
			has_country_modifier = member_of_trade_coalition
		}
	}
	is_allowed = {
		has_country_modifier = head_of_trade_coalition
		FROM = {
			has_country_modifier = member_of_trade_coalition
		}
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - kick_from_trade_coalition"
            }
        }
        
		FROM = {
            remove_country_modifier = member_of_trade_coalition
            country_event = { id = wwu_faction_system.43 }
        }
	}
	on_decline = { 
        FROM = {
            remove_country_modifier = member_of_trade_coalition
            country_event = { id = wwu_faction_system.43 }
        }
	}
	
	ai_acceptance = {
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = 1000
			}
		}
	}

	ai_will_do = {
        OR = {
            # AI will kick if the leader's opinion of them is very low
            NOT = {
                has_opinion = {
                    who = FROM
                    value = -150
                }
            }
            # Target is a subject to a non-member overlord
            FROM = {
				is_subject = yes
				overlord = {
					NOT = { has_country_modifier = member_of_trade_coalition }
				}
			}
        }
	}
}

#---------------------------------------
# Leave - Alliance
#---------------------------------------
# ROOT - Potential Member
leave_the_alliance = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = leave_the_alliance_tooltip
	require_acceptance = no
    
	is_visible = {
        has_global_flag = enabled_faction_mechanics
        has_country_modifier = member_of_alliance
        FROM = { 
            has_country_modifier = head_of_alliance
        }
	}
	is_allowed = {
		has_country_modifier = member_of_alliance
        FROM = { 
            has_country_modifier = head_of_alliance
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - leave_the_alliance"
            }
        }
        
		remove_country_modifier = member_of_alliance
        FROM = {
            country_event = { id = wwu_faction_system.50 }
        }
	}
	on_decline = { 
        remove_country_modifier = member_of_alliance
        FROM = {
            country_event = { id = wwu_faction_system.50 }
        }
	}
	
	ai_acceptance = {
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = 1000
			}
		}
	}

	ai_will_do = {
        OR = {
            # AI will leave if opinion of leader is very low
            NOT = {
                has_opinion = {
                    who = FROM
                    value = -180
                }
            }
            # AI is a subject to a non-member overlord
            AND = {
                is_subject = yes
                overlord = {
                    NOT = { has_country_modifier = member_of_alliance }
                }
            }
        }
	}
}

#---------------------------------------
# Leave - Horde
#---------------------------------------
# ROOT - Potential Member
leave_the_horde = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = leave_the_horde_tooltip
	require_acceptance = no
    
	is_visible = {
        has_global_flag = enabled_faction_mechanics
        has_country_modifier = member_of_horde
        FROM = { 
            has_country_modifier = head_of_horde
        }
	}
	is_allowed = {
		has_country_modifier = member_of_horde
        FROM = { 
            has_country_modifier = head_of_horde
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - leave_the_horde"
            }
        }
        
		remove_country_modifier = member_of_horde
        FROM = {
            country_event = { id = wwu_faction_system.51 }
        }
	}
	on_decline = { 
        remove_country_modifier = member_of_horde
        FROM = {
            country_event = { id = wwu_faction_system.51 }
        }
	}
	
	ai_acceptance = {
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = 1000
			}
		}
	}

	ai_will_do = {
		OR = {
            # AI will leave if opinion of leader is very low
            NOT = {
                has_opinion = {
                    who = FROM
                    value = -180
                }
            }
            # AI is a subject to a non-member overlord
            AND = {
                is_subject = yes
                overlord = {
                    NOT = { has_country_modifier = member_of_horde }
                }
            }
        }
	}
}

#---------------------------------------
# Leave - Old Horde
#---------------------------------------
# ROOT - Potential Member
leave_the_old_horde = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = leave_the_old_horde_tooltip
	require_acceptance = no
    
	is_visible = {
        has_global_flag = enabled_faction_mechanics
        has_country_modifier = member_of_old_horde
        FROM = { 
            has_country_modifier = head_of_old_horde
        }
	}
	is_allowed = {
		has_country_modifier = member_of_old_horde
        FROM = { 
            has_country_modifier = head_of_old_horde
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - leave_the_old_horde"
            }
        }
        
		remove_country_modifier = member_of_old_horde
        FROM = {
            country_event = { id = wwu_faction_system.52 }
        }
	}
	on_decline = { 
        remove_country_modifier = member_of_old_horde
        FROM = {
            country_event = { id = wwu_faction_system.52 }
        }
	}
	
	ai_acceptance = {
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = 1000
			}
		}
	}

	ai_will_do = {
		OR = {
            # AI will leave if opinion of leader is very low
            NOT = {
                has_opinion = {
                    who = FROM
                    value = -180
                }
            }
            # AI is a subject to a non-member overlord
            AND = {
                is_subject = yes
                overlord = {
                    NOT = { has_country_modifier = member_of_old_horde }
                }
            }
        }
	}
}

#---------------------------------------
# Leave - Trade Coalition
#---------------------------------------
# ROOT - Potential Member
leave_the_trade_coalition = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = leave_the_trade_coalition_tooltip
	require_acceptance = no
    
	is_visible = {
        has_global_flag = enabled_faction_mechanics
        has_country_modifier = member_of_trade_coalition
        FROM = { 
            has_country_modifier = head_of_trade_coalition
        }
	}
	is_allowed = {
		has_country_modifier = member_of_trade_coalition
        FROM = { 
            has_country_modifier = head_of_trade_coalition
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - leave_the_trade_coalition"
            }
        }
        
		remove_country_modifier = member_of_trade_coalition
        FROM = {
            country_event = { id = wwu_faction_system.53 }
        }
	}
	on_decline = { 
        remove_country_modifier = member_of_trade_coalition
        FROM = {
            country_event = { id = wwu_faction_system.53 }
        }
	}
	
	ai_acceptance = {
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = 1000
			}
		}
	}

	ai_will_do = {
		OR = {
            # AI will leave if opinion of leader is very low
            NOT = {
                has_opinion = {
                    who = FROM
                    value = -180
                }
            }
            # AI is a subject to a non-member overlord
            AND = {
                is_subject = yes
                overlord = {
                    NOT = { has_country_modifier = member_of_trade_coalition }
                }
            }
        }
	}
}

#---------------------------------------
# Pass Leadership - Alliance
#---------------------------------------
# ROOT - Faction Leader
pass_the_alliance_leadership = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = pass_the_alliance_leadership_tooltip
	require_acceptance = no
    
	is_visible = {
        has_global_flag = enabled_faction_mechanics
        has_country_modifier = head_of_alliance
        FROM = { 
            has_country_modifier = member_of_alliance
        }
	}
	is_allowed = {
		has_country_modifier = head_of_alliance
        FROM = { 
            has_country_modifier = member_of_alliance
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - pass_the_alliance_leadership"
            }
        }
        
		remove_country_modifier = head_of_alliance
        set_member_of_faction = {
            faction = alliance
        }
        FROM = {
            set_head_of_faction = {
                faction = alliance
            }
        }
	}
	on_decline = { 
        remove_country_modifier = head_of_alliance
        set_member_of_faction = {
            faction = alliance
        }
        FROM = {
            set_head_of_faction = {
                faction = alliance
            }
        }
	}
	
	ai_acceptance = {
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = 1000
			}
		}
	}

	ai_will_do = {
        # AI should never do this normally
		always = no
	}
}

#---------------------------------------
# Pass Leadership - Trade Coalition
#---------------------------------------
# ROOT - Faction Leader
pass_the_trade_coalition_leadership = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = pass_the_trade_coalition_leadership_tooltip
	require_acceptance = no
    
	is_visible = {
        has_global_flag = enabled_faction_mechanics
        has_country_modifier = head_of_trade_coalition
        FROM = { 
            has_country_modifier = member_of_trade_coalition
        }
	}
	is_allowed = {
		has_country_modifier = head_of_trade_coalition
        FROM = { 
            has_country_modifier = member_of_trade_coalition
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - pass_the_trade_coalition_leadership"
            }
        }
        
		remove_country_modifier = head_of_trade_coalition
        set_member_of_faction = {
            faction = trade_coalition
        }
        FROM = {
            set_head_of_faction = {
                faction = trade_coalition
            }
        }
	}
	on_decline = { 
        remove_country_modifier = head_of_trade_coalition
        set_member_of_faction = {
            faction = trade_coalition
        }
        FROM = {
            set_head_of_faction = {
                faction = trade_coalition
            }
        }
	}
	
	ai_acceptance = {
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = 1000
			}
		}
	}

	ai_will_do = {
        # AI should never do this normally
		always = no
	}
}

#---------------------------------------
# Call to War - Faction
#---------------------------------------
# ROOT - Faction Leader
call_to_war_faction = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = call_to_war_faction_tooltip
	require_acceptance = yes
    
	is_visible = {
        has_global_flag = enabled_faction_mechanics
        NOT = { has_country_modifier = recent_faction_interaction }
        
        is_at_war = yes
        FROM = { 
            NOT = { is_at_war = yes }
        }
        
        # Alliance
        if = {
            limit = {
                has_country_modifier = head_of_alliance
            }
            
            FROM = { 
                has_country_modifier = member_of_alliance
            }
        }
        # Horde
        else_if = {
            limit = {
                has_country_modifier = head_of_horde
            }
            
            FROM = { 
                has_country_modifier = member_of_horde
            }
        }
        # Old Horde
        else_if = {
            limit = {
                has_country_modifier = head_of_old_horde
            }
            
            FROM = { 
                has_country_modifier = member_of_old_horde
            }
        }
        # Trade Coalition
        else_if = {
            limit = {
                has_country_modifier = head_of_trade_coalition
            }
            
            FROM = { 
                has_country_modifier = member_of_trade_coalition
            }
        }
        # Otherwise block usage
        else = {
            always = no
        }
	}
	is_allowed = {
        NOT = { has_country_modifier = recent_faction_interaction }
		
        is_at_war = yes
        FROM = { 
            NOT = { is_at_war = yes }
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - call_to_war_faction - accepted"
            }
        }
        
        add_country_modifier = {
            name = recent_faction_interaction
            duration = 365
        }
        
        hidden_effect = {
            save_event_target_as = caller
            FROM = {
                save_event_target_as = receiver
            }
            
            # Scope to the leader of the opposing nation at war with ROOT
            random_war_enemy_country = {
                limit = {
                    OR = {
                        is_in_war = {
                            attacker_leader = THIS
                            participants = ROOT
                        }
                        is_in_war = {
                            defender_leader = THIS
                            participants = ROOT
                        }
                    }
                }
                
                country_event = { id = wwu_war_assist.1 days = 1 }
            }
        }
	}
	on_decline = { 
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - call_to_war_faction - declined"
            }
        }
        
        add_country_modifier = {
            name = recent_faction_interaction
            duration = 365
        }
        add_prestige = -10
	}
	
	ai_acceptance = {
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = 100
			}
		}
		add_entry = {
			name = INV_ROOTPRESTIGE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = prestige
			}
			subtract_variable = { which = ai_value value = 25 }
			divide_variable = { which = ai_value value = 2 }
		}
		add_entry = {
			name = INV_OPINION
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
		}
        add_entry = {
			name = INV_FACTION_LOSING
			limit = {
				NOT = { war_score = -20 }
			}
			export_to_variable = {
				variable_name = ai_value
				value = 100
			}
		}
	}

	ai_will_do = {
        # These AI will call in members, or any if they are losing badly
        OR = {
            personality = ai_militarist
            personality = ai_balanced
            NOT = { war_score = -50 }
        }
	}
}

#---------------------------------------
# Request Aid - Faction
#---------------------------------------
# ROOT - Member
request_aid_faction = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = call_to_war_faction_tooltip
	require_acceptance = yes
    
	is_visible = {
        has_global_flag = enabled_faction_mechanics
        NOT = { has_country_modifier = recent_faction_interaction }
        
        is_at_war = yes
        FROM = {
            NOT = { is_at_war = yes }
        }
        
        # Alliance
        if = {
            limit = {
                NOT = { has_country_modifier = head_of_alliance }
                has_country_modifier = member_of_alliance
            }
            
            FROM = { 
                has_country_modifier = member_of_alliance
            }
        }
        # Horde
        else_if = {
            limit = {
                NOT = { has_country_modifier = head_of_horde }
                has_country_modifier = member_of_horde
            }
            
            FROM = { 
                has_country_modifier = member_of_horde
            }
        }
        # Old Horde
        else_if = {
            limit = {
                NOT = { has_country_modifier = head_of_old_horde }
                has_country_modifier = member_of_old_horde
            }
            
            FROM = { 
                has_country_modifier = member_of_old_horde
            }
        }
        # Trade Coalition
        else_if = {
            limit = {
                NOT = { has_country_modifier = head_of_trade_coalition }
                has_country_modifier = member_of_trade_coalition
            }
            
            FROM = { 
                has_country_modifier = member_of_trade_coalition
            }
        }
        # Otherwise block usage
        else = {
            always = no
        }
	}
	is_allowed = {
        NOT = { has_country_modifier = recent_faction_interaction }
		
        is_at_war = yes
        FROM = {
            NOT = { is_at_war = yes }
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - request_aid_faction - accepted"
            }
        }
        
        add_country_modifier = {
            name = recent_faction_interaction
            duration = 365
        }
        
        hidden_effect = {
            save_event_target_as = caller
            FROM = {
                save_event_target_as = receiver
            }
            
            # Scope to the leader of the opposing nation at war with ROOT
            random_war_enemy_country = {
                limit = {
                    OR = {
                        is_in_war = {
                            attacker_leader = THIS
                            participants = ROOT
                        }
                        is_in_war = {
                            defender_leader = THIS
                            participants = ROOT
                        }
                    }
                }
                
                country_event = { id = wwu_war_assist.1 days = 1 }
            }
        }
	}
	on_decline = { 
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - request_aid_faction - declined"
            }
        }
        
        add_country_modifier = {
            name = recent_faction_interaction
            duration = 365
        }
        add_prestige = -10
	}
	
	ai_acceptance = {
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = -25
			}
		}
		add_entry = {
			name = INV_ROOTPRESTIGE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = prestige
			}
			subtract_variable = { which = ai_value value = 25 }
			divide_variable = { which = ai_value value = 2 }
		}
		add_entry = {
			name = INV_OPINION
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			subtract_variable = { which = ai_value value = 25 }
		}
        add_entry = {
			name = INV_FACTION_LOSING
			limit = {
				NOT = { war_score = -20 }
			}
			export_to_variable = {
				variable_name = ai_value
				value = 100
			}
		}
        add_entry = {
			name = INV_FACTION_LEADER
			limit = {
				FROM = { 
                    OR = {
                        has_country_modifier = head_of_alliance 
                        has_country_modifier = head_of_horde
                        has_country_modifier = head_of_old_horde
                        has_country_modifier = head_of_trade_coalition
                    }
                }
			}
			export_to_variable = {
				variable_name = ai_value
				value = 100
			}
		}
	}

	ai_will_do = {
        # These AI will call in members, or any if they are losing badly
        OR = {
            personality = ai_militarist
            personality = ai_balanced
            NOT = { war_score = -50 }
        }
	}
}

#---------------------------------------
# Request - Tributary Vassal
#---------------------------------------
# ROOT - Overlord
request_aid_tributary_vassal = {
	category = alliance
	
	alert_index = 3
	alert_tooltip = request_aid_tributary_tooltip
	require_acceptance = yes
    
	is_visible = {
        is_at_war = yes
        FROM = { 
            is_subject_of = ROOT
            is_subject_of_type = tributary_vassal
            NOT = { is_at_war = yes }
        }
	}
	is_allowed = {
        is_at_war = yes
        FROM = { 
            is_subject_of = ROOT
            is_subject_of_type = tributary_vassal
            NOT = { is_at_war = yes }
            NOT = { liberty_desire = 50 }
        }
	}
	on_accept = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - request_aid_tributary_vassal - accepted"
            }
        }
        
        hidden_effect = {
			# Audax Validator "." Ignore_NEXT
            save_event_target_as = caller
            FROM = {
				# Audax Validator "." Ignore_NEXT
                save_event_target_as = receiver
            }
            
            # Scope to the leader of the opposing nation at war with ROOT
            random_war_enemy_country = {
                limit = {
                    OR = {
                        is_in_war = {
                            attacker_leader = THIS
                            participants = ROOT
                        }
                        is_in_war = {
                            defender_leader = THIS
                            participants = ROOT
                        }
                    }
                }
                
                country_event = { id = wwu_war_assist.1 days = 1 }
            }
        }
	}
	on_decline = {
        hidden_effect = {
            if = { 
                limit = { has_global_flag = enable_diplomacy_logging }
                log = "DEBUG - [Root.GetName], [From.GetName] - request_aid_tributary_vassal - declined"
            }
        }
        
        add_prestige = -5
	}
	
	ai_acceptance = {
		add_entry = {
			name = INV_BASE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = 1
			}
		}
		add_entry = {
			name = INV_ROOTPRESTIGE
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = prestige
			}
			subtract_variable = { which = ai_value value = 25 }
			divide_variable = { which = ai_value value = 2 }
		}
		add_entry = {
			name = INV_OPINION
			limit = {
				always = yes
			}
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			subtract_variable = { which = ai_value value = 25 }
		}
	}

	ai_will_do = {
        # These AI will call in subjects, or any if they are losing badly
        OR = {
            personality = ai_militarist
            personality = ai_balanced
            NOT = { war_score = -50 }
        }
	}
}

